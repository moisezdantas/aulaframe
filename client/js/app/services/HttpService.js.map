{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","res","ok","Error","statusText","url","fetch","then","_handleErrors","json","dado","headers","method","body","JSON","stringify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mCAAaA,W;;;;;;;kDAEKC,G,EAAI;AACd,4BAAG,CAACA,IAAIC,EAAR,EAAY,MAAM,IAAIC,KAAJ,CAAUF,IAAIG,UAAd,CAAN;AACZ,+BAAOH,GAAP;AACH;;;wCAEGI,G,EAAK;AAAA;;AAEN,+BAAOC,MAAMD,GAAN,EACLE,IADK,CACA;AAAA,mCAAO,MAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,yBADA,EAELM,IAFK,CAEA;AAAA,mCAAQN,IAAIQ,IAAJ,EAAR;AAAA,yBAFA,CAAP;AAGF;;;yCAEIJ,G,EAAKK,I,EAAM;;AAEZ,+BAAOJ,MAAMD,GAAN,EAAW;AACdM,qCAAS,EAAC,gBAAe,kBAAhB,EADK;AAEdC,oCAAQ,MAFM;AAGdC,kCAAMC,KAAKC,SAAL,CAAeL,IAAf;AAHQ,yBAAX,EAKNH,IALM,CAKDN,MAAM,KAAKO,aAAL,CAAmBP,GAAnB,CALL,CAAP;AAMH","file":"HttpService.js","sourcesContent":["export class HttpService {\n\n    _handleErrors(res){\n        if(!res.ok) throw new Error(res.statusText);\n        return res;\n    }\n    \n    get(url) {\n        \n       return fetch(url)\n        .then(res => this._handleErrors(res))\n        .then(res =>  res.json());\n    }\n    \n    post(url, dado) {\n\n        return fetch(url, {\n            headers: {'Content-type':'application/json'},\n            method: 'post',\n            body: JSON.stringify(dado)\n        })\n        .then(res = this._handleErrors(res));\n    }\n}"]}